(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{382:function(s,e,t){"use strict";t.r(e);var a=t(5),n=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"_0-前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-前言"}},[s._v("#")]),s._v(" 0. 前言")]),s._v(" "),e("p",[s._v("Calico是k8s中常用的容器解决方案的插件，本文主要介绍BGP模式和IPIP模式是如何解决的，并详细了解其原理，并通过实验加深理解。")]),s._v(" "),e("h2",{attrs:{id:"_1-介绍calico"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍calico"}},[s._v("#")]),s._v(" 1. 介绍Calico")]),s._v(" "),e("p",[s._v("Calico是属于纯3层的网络模型，每个容器都通过IP直接通信，中间通过路由转发找到对方。容器所在的节点类似于传统的路由器，提供了路由查找的功能。每个容器所在的主机节点扮演了虚拟路由器  （vRouter）的功能，vRouter必须有某种方法，能够知道整个集群的路由信息。")]),s._v(" "),e("p",[s._v("之前提到的Flannel"),e("a",{attrs:{href:"https://www.zhengwenfeng.com/pages/d9d0ce/#_4-host-gateway%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"}},[s._v("Host Gateway模式"),e("OutboundLink")],1),s._v("方案是不能跨二层网络，是因为它只能修改主机路由，Calico把改路由表的做法换成了标准的BGP路由协议。相当于在每个节点上模拟出一个额外的路由器，由于采用的是标准协议，Calico模拟路由器的路由表信息可以被传播到网络的其他路由设备中，这样就实现了在三层网络上的高速跨节点网络。")]),s._v(" "),e("blockquote",[e("p",[s._v("BGP（Border Gateway Protocol）是一种用于在互联网中交换路由信息的协议。它是一种自治系统（AS）之间的路由协议，用于在不同的自治系统之间交换路由信息。BGP协议的主要作用是将路由信息从一个自治系统传递到另一个自治系统，以便实现互联网的全球路由。")])]),s._v(" "),e("p",[s._v("但现实中的网络并不一定支持BGP路由，在这种情况下可以使用"),e("a",{attrs:{href:"https://www.zhengwenfeng.com/pages/c128e7/",target:"_blank",rel:"noopener noreferrer"}},[s._v("IPIP隧道"),e("OutboundLink")],1),s._v("模式来传输数据。")]),s._v(" "),e("h2",{attrs:{id:"_2-calio架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-calio架构"}},[s._v("#")]),s._v(" 2. Calio架构")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gcore.jsdelivr.net/gh/tenqaz/BLOG-CDN@main/c__Users_User_OneDrive_workspace_excalidraw_calico.png",alt:""}})]),s._v(" "),e("p",[e("strong",[s._v("Felix")])]),s._v(" "),e("p",[s._v("Felix是一个守护程序，作为agent运行在托管容器或虚拟机的Calico节点上。Felix负责刷新主机路由和ACL规则等，以便为该主机上的Endpoint正常运行提供所需的网络连接和管理。进出容器、虚拟机和物理主机的所有流量都会遍历Calico，利用Linux内核原生的路由和iptables生成的规则。")]),s._v(" "),e("p",[e("strong",[s._v("BGP Client")])]),s._v(" "),e("p",[s._v("Calico在每个运行Felix服务的节点上都部署一个BGP Client（BGP客户端）。BGP客户端的作用是读取Felix编写到内核中的路由信息，由BGP客户端对这些路由信息进行分发。当Felix将路由插入Linux内核时，BGP客户端将接收它们，并将它们分发到集群中的其他工作节点。")]),s._v(" "),e("p",[e("strong",[s._v("Node-to-Node Mesh")])]),s._v(" "),e("p",[s._v("该模式为默认模式，在BGP下，集群中的每一个节点的BGP Client都需要和其他所有节点的BGP Client进行通信来交换路由。"),e("br"),s._v("\n但随着节点数量增加，连接数会以N^2规模增加，给集群网络带来巨大的压力。")]),s._v(" "),e("p",[e("strong",[s._v("BGP Route Reflector")])]),s._v(" "),e("p",[s._v("Calico会指定几个节点负责专门跟其他所有节点进行连接并交换路由信息，从而学习到全局的路由信息。而其他节点也只需要跟这几个节点进行通信来获取到整个集群的规则信息。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gcore.jsdelivr.net/gh/tenqaz/BLOG-CDN@main/20230603112004.png",alt:""}})]),s._v(" "),e("h2",{attrs:{id:"_3-bgp模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-bgp模式"}},[s._v("#")]),s._v(" 3. BGP模式")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gcore.jsdelivr.net/gh/tenqaz/BLOG-CDN@main/20230604160534.png",alt:""}})]),s._v(" "),e("p",[s._v("每个容器都会创建一对veth pair网卡，一端放在容器内部，另一端放在宿主机中，容器中发送的IP包通过veth pair网卡可以达到宿主机的网络协议栈中。")]),s._v(" "),e("p",[s._v("Felix会通过监听etcd来获取其他节点的相关信息，然后添加本地路由：")]),s._v(" "),e("ol",[e("li",[s._v("通往其他节点容器的IP包下一条到其节点物理网卡中。")]),s._v(" "),e("li",[s._v("通过本机节点容器的IP包到calixxx网卡中，然后进入到容器中。")])]),s._v(" "),e("p",[s._v("BGP Client会读取Felix写入到本地的路由，再通过进行分发到网络中。")]),s._v(" "),e("h2",{attrs:{id:"_4-手动模拟bgp模式实验"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-手动模拟bgp模式实验"}},[s._v("#")]),s._v(" 4. 手动模拟BGP模式实验")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gcore.jsdelivr.net/gh/tenqaz/BLOG-CDN@main/20230604174302.png",alt:""}})]),s._v(" "),e("h3",{attrs:{id:"_4-1-操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-操作"}},[s._v("#")]),s._v(" 4.1 操作")]),s._v(" "),e("p",[s._v("首先在Node1中创建Network Namespace命名为net1")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" net1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("然后创建一对veth pair设备veth0和veth1，将veth0放到net1中，拉起并设置好ip地址172.19.1.2/24，veth1也拉取但不用设置IP地址，但需要设置默认的MAC地址为ee:ee:ee:ee:ee:ee")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" veth0 "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" veth peer name veth1\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" dev veth0 netns net1\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" net1 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" veth0 up\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" net1 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" addr "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".1.2/24 dev veth0\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" dev veth1 up\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" dev veth1 address ee:ee:ee:ee:ee:ee\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("net1配置的路由有点意思，和一般配置的路由不同，所有的报文都需要通过veth0设备发送到下一跳的地址为169.254.1.1，而这个地址在整个平台找是不存在的，这是一个默认的网关，那如何达到该地址呢？")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" net1 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" r a "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("169.254")]),s._v(".1.1 dev veth0 \n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" net1 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" r a default via "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("169.254")]),s._v(".1.1 dev veth0 \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("通过设置veth1设备proxy_arp，可以对于任何ARP请求到达veth1时，都响应自己的Mac地址，也就是ee:ee:ee:ee:ee:ee")]),s._v(" "),e("p",[s._v("当访问网关的时候，首先是需要进行ARP请求，请求通过veth0设备达到了veth1中，因为设置proxy_arp，会将自身的mac地址ee:ee:ee:ee:ee:ee作为arp回复。")]),s._v(" "),e("p",[s._v("而容器的后续报文目的IP地址是目的容器的IP地址，而mac地址变成了网关MAC地址ee:ee:ee:ee:ee:ee，而网关的IP地址并不会出现在任何的数据包中，也没人关心这个具体的地址是什么，只要能找到arp就行。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /proc/sys/net/ipv4/conf/veth1/proxy_arp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("数据包已经从net1中通过veth1作为网关达到宿主机的网络协议栈中，再通过设置宿主机路由表，将目的地址为Node2容器网段的数据包通过Node2 ens18网卡地址作为下一跳地址。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" r "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".2.0/24 via "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.65")]),s._v(".132.188 dev ens18\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("目的地址为Node1的net1时，需要配置通过路由表到达veth1网卡，然后再进入到net1中。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" r "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".1.2 dev veth1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("再在Node2中重复Node1的操作创建Network Namespace net2，并初始化网络配置。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" net2\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" veth0 "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" veth peer name veth1\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" dev veth0 netns net2\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" net2 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" addr "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".2.2/24 dev veth0 \n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" net2 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" veth0 up\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" dev veth1 up\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" dev veth1 address ee:ee:ee:ee:ee:ee\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" net2 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" r a "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("169.254")]),s._v(".1.1 dev veth0 \n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" net2 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" r a default via "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("169.254")]),s._v(".1.1 dev veth0 \n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" r "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".1.0/24 via "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.65")]),s._v(".132.187 dev ens18\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" r "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".2.2/32 dev veth1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h3",{attrs:{id:"_4-2-分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-分析"}},[s._v("#")]),s._v(" 4.2 分析")]),s._v(" "),e("p",[s._v("在Node1 net1中ping Node2 net2，然后使用tcpdump监听Node1的veth1，结果如下：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tcpdump -i veth1 -ne")]),s._v("\ndropped privs to tcpdump\ntcpdump: verbose output suppressed, use "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" or "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-vv")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" full protocol decode\nlistening on veth1, link-type EN10MB "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Ethernet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", capture size "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("262144")]),s._v(" bytes\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":38:29.713322 02:1c:9c:83:87:f2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Broadcast, ethertype ARP "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x0806"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),s._v(": Request who-has "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("169.254")]),s._v(".1.1 tell "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".1.2, length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":38:30.205862 ee:ee:ee:ee:ee:ee "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 02:1c:9c:83:87:f2, ethertype ARP "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x0806"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),s._v(": Reply "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("169.254")]),s._v(".1.1 is-at ee:ee:ee:ee:ee:ee, length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":38:30.205922 02:1c:9c:83:87:f2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ee:ee:ee:ee:ee:ee, ethertype IPv4 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x0800"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".1.2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".2.2: ICMP "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" request, "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("37475")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":38:30.206393 ee:ee:ee:ee:ee:ee "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 02:1c:9c:83:87:f2, ethertype IPv4 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x0800"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".2.2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".1.2: ICMP "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" reply, "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("37475")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("可以看到，先是发送arp请求获取172.19.1.2的mac地址，因为设置了proxy_arp，所以会将自身的Mac地址进行回复，在后面的ICMP包中，目的IP地址为目的容器IP地址172.19.2.2，而目的Mac地址为veth1的Mac地址ee:ee:ee:ee:ee:ee")]),s._v(" "),e("p",[s._v("再使用tcpdump监听Node2的ens18网卡，结果如下：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tcpdump -i ens18 host 172.19.2.2 -en")]),s._v("\ndropped privs to tcpdump\ntcpdump: verbose output suppressed, use "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" or "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-vv")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" full protocol decode\nlistening on ens18, link-type EN10MB "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Ethernet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", capture size "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("262144")]),s._v(" bytes\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":52:43.993140 fa:16:3e:d3:f6:3a "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" fa:16:3e:b1:9a:65, ethertype IPv4 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x0800"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".1.2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".2.2: ICMP "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" request, "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4349")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":52:43.993291 fa:16:3e:b1:9a:65 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" fa:16:3e:d3:f6:3a, ethertype IPv4 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x0800"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".2.2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".1.2: ICMP "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" reply, "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4349")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("数据包从Node1中到达了Node2 ens18网卡，源IP和目的IP分别为net1和net2的IP地址，而mac地址是Node1和Node2的物理网卡ens18 Mac地址.")]),s._v(" "),e("p",[s._v("使用tcpdump监听veth1网卡，结果如下：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tcpdump -i veth1 -en")]),s._v("\ndropped privs to tcpdump\ntcpdump: verbose output suppressed, use "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" or "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-vv")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" full protocol decode\nlistening on veth1, link-type EN10MB "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Ethernet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", capture size "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("262144")]),s._v(" bytes\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":58:13.780247 ee:ee:ee:ee:ee:ee "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" fa:63:d4:dc:25:01, ethertype IPv4 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x0800"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".1.2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".2.2: ICMP "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" request, "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("41971")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":58:13.780288 fa:63:d4:dc:25:01 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ee:ee:ee:ee:ee:ee, ethertype IPv4 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x0800"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".2.2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".1.2: ICMP "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" reply, "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("41971")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", length "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("查看Node2的路由")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ip r")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.19")]),s._v(".2.2 dev veth1 scope "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("数据包达到Node2 ens18网卡后，解开mac头，到达网络协议栈中，通过路由，将目的地址为172.19.2.2的数据包都进入到veth1网卡中，最终进入到net2中")]),s._v(" "),e("h2",{attrs:{id:"_5-ipip隧道模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-ipip隧道模式"}},[s._v("#")]),s._v(" 5. IPIP隧道模式")]),s._v(" "),e("p",[s._v("该模式的解决方式是在物理机A和物理机B之间打一个隧道，这个隧道有两个端点，在端点上进行封装，将容器的IP作为乘客协议放在隧道里面，而物理主机的IP放在外面作为承载协议。这样不管外层的IP通过传统的物理网络，走多少跳到达目标物理机，从隧道两端看起来，物理机A的下一跳就是物理机B。")])])}),[],!1,null,null,null);e.default=n.exports}}]);